networks:
  innonetwork:

services:
  postgres:
    image: postgres:15.7
    container_name: postgres
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    networks:
      - innonetwork
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  innoslate:
    image: innoslate/innoslate:4.11.0.2
    container_name: innoslate
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - innonetwork
    volumes:
      - ./innoslate-files/server.xml:/usr/local/tomcat/conf/server.xml:z
    command: ["innoslate", "run"]
    tty: true

  nginx:
    image: nginx:mainline-alpine3.22-perl
    container_name: nginx
    depends_on:
      - innoslate
    networks:
      - innonetwork
    ports:
      - "443:8081"
    volumes:
      - ./nginx-files/nginx.conf:/etc/nginx/conf.d/default.conf:z
      - ./nginx-files/certs:/etc/nginx/certs/:z

volumes:
  pgdata: